===========================
How to Use 0-add_integer.py
===========================

This module defines an integer addition function ``add_integer(a, b=98)``.

Usage
=====
``add_integer(...)``` returns the addition of its two arguments. For numbers,
that value is equivalent to using the ``+`` operator.

 firstly, import ``add_integer`` from the ``0-add_integer`` file:
>>> add_integer = __import__('0-add_integer').add_integer

::
>>> add_integer (1, 2)
3

::
>>> add_integer (100, -2)
98

::
>>> add_integer (2)
100

...testing b is not integer
>>> add_integer (2, "school")
Traceback (most recent call last):
TypeError: b must be an integer

::

...Note that floats are casted to ints before addition is performed.
>>> add_integer (3, 2.5)
5

::

...testing a is not integer
>>> add_integer ("holberton", 3.5)
Traceback (most recent call last):
TypeError: a must be an integer

::

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

::

>>> add_integer(2, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

::

And again with NaN numbers.

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer